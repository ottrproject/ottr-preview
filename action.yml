name: 'ottr-preview'
author: "Candace Savonen"
description: "Render a preview for an Rmd or Quarto website or course"

inputs:
  toggle_website:
    description: "Is this Rmd or Quarto based? Should be a string of either 'rmd' or 'quarto'"
    default: false
    type: string
    required: true
  root_path:
    description: "What is the relative file path to the root of the course directory? Default is top of the directory"
    default: "."
    type: string
  preview:
    description: "True or false a preview branch should be created for this. "
    default: TRUE
    type: boolean
  gh_pat:
    description: If merging to main you will need to give big permissions here
    required: ${secrets.GH_PAT}

runs:
  using: "composite"
  steps:
    - name: Checkout files
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${ inputs.gh_pat }

    # Set up git checkout
    - name: Set up git checkout
      run: |
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      shell: bash

    # Set up git checkout
    - name: Set up preview branch
      if: ${{ inputs.preview == 'true' }}
      run: |
        git push origin --delete preview-${{ github.event.pull_request.number }} || echo "No branch to delete"
        branch_name='preview-${{ github.event.pull_request.number }}'
        echo branch doesnt exist
        git checkout -b $branch_name || echo branch exists
        git push --set-upstream origin $branch_name || echo branch exists remotely
        git fetch --all
        git checkout $branch_name
        git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }} --allow-unrelated-histories
      shell: bash

    # Run rendering
    - name: Render course
      id: render
      run: |
        docker run -v ${{ github.workspace }}/${{ inputs.root_path }}:/home \
          --workdir=/home \
          jhudsl/ottrpal:dev \
          ${{ inputs.toggle_website }}
      shell: bash

    # This checks on the steps before it and makes sure that they completed.
    # If the renders didn't complete we don't want to commit the file changes
    - name: Check on render steps
      run: |
        echo Rendering status ${{steps.render.outcome}}
        if [${{steps.render.outcome}} != 'success']; then
          exit 1
        fi
      shell: bash

    - name: Website preview for download
      if: ${{ inputs.preview == 'true' }}
      run: zip website-preview.zip ${{ github.workspace }}/${{ inputs.root_path }}/docs/* -r
      shell: bash

    # Commit the rendered files
    - name: Commit rendered files to preview branch
      if: ${{ inputs.preview == 'true' }}
      id: commit
      run: |
        branch_name='preview-${{ github.event.pull_request.number }}'
        git diff origin/main -- docs >/dev/null && changes=true || changes=false
        echo "changes=$changes" >> $GITHUB_OUTPUT
        git add . --force
        git commit -m 'Render preview' || echo "No changes to commit"
        git pull --rebase --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
        git push --force || echo "No changes to commit"
      shell: bash

    # Commit the rendered files
    - name: Commit rendered files to original branch
      if: ${{ inputs.preview == 'true' }}
      id: commit_rendered
      run: |
        git add docs/* --force
        git commit -m 'Re-render' || echo "No changes to commit"
        git pull --rebase --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
        git push --force || echo "No changes to commit"
      shell: bash

    - name: Find Comment
      if: ${{ inputs.preview == 'true' }}
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: latest commit

    - name: Build components of the comment
      if: ${{ inputs.preview == 'TRUE' }}
      id: build-components
      run: |
        course_name=$(head -n 1 _bookdown.yml | cut -d'"' -f 2| tr " " "-")
        bookdown_link=$(echo "https://htmlpreview.github.io/?https://raw.githubusercontent.com/$GITHUB_REPOSITORY/preview-${{ github.event.pull_request.number }}/docs/index.html")
        docx_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/docs/$course_name.docx")
        zip_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/website-preview.zip")
        echo "zip_link=$zip_link" >> $GITHUB_OUTPUT
        echo "bookdown_link=$bookdown_link" >> $GITHUB_OUTPUT
        echo "docx_link=$docx_link" >> $GITHUB_OUTPUT
        echo "time=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "commit_id=$GITHUB_SHA" >> $GITHUB_OUTPUT
        echo ${{steps.commit.outputs.changes}}
      shell: bash

    - name: Create or update comment
      if: ${{ inputs.preview == 'true' }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Re-rendered previews from the latest commit:
          - :eyes: Quick [preview of course website here](${{ steps.build-components.outputs.bookdown_link }}) \*
          - :microscope: Comprehensive [download of the course website here](${{ steps.build-components.outputs.zip_link }})
          - Download the [.docx file](${{ steps.build-components.outputs.docx_link }})

          \* note not all html features will be properly displayed in the "quick preview" but it will give you a rough idea.

          _Updated at ${{ steps.build-components.outputs.time }} with changes from the latest commit ${{ steps.build-components.outputs.commit_id }}_
        edit-mode: replace

    - name: Comment if no changes
      if: ${{ inputs.preview == 'true' && steps.commit.outputs.changes == 'false' }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          The latest commit did not produce rendering changes.

          _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
        edit-mode: replace

branding:
  icon: "briefcase"
  color: "blue"
